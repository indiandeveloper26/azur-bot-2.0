const TelegramBot = require("node-telegram-bot-api");
const Razorpay = require("razorpay");
const User = require("./models/User");

const bot = new TelegramBot("YOUR_TELEGRAM_BOT_TOKEN", { polling: true });

const razorpay = new Razorpay({
  key_id: "YOUR_KEY_ID",
  key_secret: "YOUR_KEY_SECRET",
});

// тП│ 1. Check if user is already premium
bot.onText(/\/start|\/subscribe/, async (msg) => {
  const chatId = msg.chat.id.toString();

  let user = await User.findOne({ telegramId: chatId });

  if (user && user.isPremium && user.premiumTill > new Date()) {
    bot.sendMessage(chatId, "тЬЕ рдЖрдк рдкрд╣рд▓реЗ рд╕реЗ Premium Member рд╣реИрдВ!");
    return;
  }

  // ЁЯФБ 2. Create new Razorpay Order
  const options = {
    amount: 19900, // Rs.199.00
    currency: "INR",
    receipt: `rcpt_${chatId}_${Date.now()}`,
    payment_capture: 1,
  };

  try {
    const order = await razorpay.orders.create(options);

    if (!user) {
      user = new User({
        telegramId: chatId,
        isPremium: false,
        razorpayOrderId: order.id,
      });
    } else {
      user.razorpayOrderId = order.id;
    }

    await user.save();

    const paymentLink = `https://api.razorpay.com/v1/checkout/embedded?order_id=${order.id}`;

    bot.sendMessage(chatId, `ЁЯТ│ Premium Access (1 рдорд╣реАрдирд╛) рдХреЗ рд▓рд┐рдП тВ╣199 рднреБрдЧрддрд╛рди рдХрд░реЗрдВ:\n\nЁЯСЗ рдХреНрд▓рд┐рдХ рдХрд░реЗрдВ:\n${paymentLink}`);
  } catch (error) {
    console.error("тЭМ Razorpay Error:", error);
    bot.sendMessage(chatId, "тЭМ рдХреБрдЫ рдЧрдбрд╝рдмрдбрд╝ рд╣реЛ рдЧрдИ, рдХреГрдкрдпрд╛ рдмрд╛рдж рдореЗрдВ рдкреНрд░рдпрд╛рд╕ рдХрд░реЗрдВред");
  }
});
